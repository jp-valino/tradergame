{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAiNT\\\\Desktop\\\\2024\\\\Projects\\\\TraderGame - Java\\\\tradergame\\\\web-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport StockMarket from './components/StockMarket';\nimport Portfolio from './components/Portfolio';\nimport { getPortfolio, buyStock, sellStock, progressDay, resetPortfolio, savePortfolio, loadPortfolio, createStock } from './services/api';\nimport './styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [portfolio, setPortfolio] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [activeTab, setActiveTab] = useState('portfolio');\n  useEffect(() => {\n    fetchPortfolio();\n\n    // Add scroll event listener\n    const handleScroll = () => {\n      if (window.scrollY > 20) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const fetchPortfolio = async () => {\n    try {\n      const data = await getPortfolio();\n      setPortfolio(data);\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      setErrorMessage('Failed to load portfolio data. Please try again.');\n    }\n  };\n  const handleBuyStock = async (symbol, quantity) => {\n    try {\n      const transaction = await buyStock(symbol, quantity);\n      setPortfolio(prevPortfolio => {\n        if (!prevPortfolio) return null;\n\n        // Find the stock in the portfolio\n        const stockIndex = prevPortfolio.ownedStocks.findIndex(s => s.symbol === symbol);\n        if (stockIndex >= 0) {\n          // Update existing stock\n          const updatedStocks = [...prevPortfolio.ownedStocks];\n          updatedStocks[stockIndex] = {\n            ...updatedStocks[stockIndex],\n            quantity: updatedStocks[stockIndex].quantity + quantity,\n            buyPrice: transaction.price\n          };\n          return {\n            ...prevPortfolio,\n            cash: prevPortfolio.cash - transaction.price * quantity,\n            ownedStocks: updatedStocks,\n            portfolioValue: calculatePortfolioValue(updatedStocks),\n            transactions: [...prevPortfolio.transactions, transaction]\n          };\n        } else {\n          // Add new stock to portfolio\n          const stockPool = prevPortfolio.stockPool;\n          const stockToBuy = stockPool.find(s => s.symbol === symbol);\n          if (!stockToBuy) return prevPortfolio;\n          const newStock = {\n            ...stockToBuy,\n            quantity,\n            buyPrice: transaction.price,\n            potentialProfit: 0,\n            realizedProfit: 0\n          };\n          return {\n            ...prevPortfolio,\n            cash: prevPortfolio.cash - transaction.price * quantity,\n            ownedStocks: [...prevPortfolio.ownedStocks, newStock],\n            portfolioValue: calculatePortfolioValue([...prevPortfolio.ownedStocks, newStock]),\n            transactions: [...prevPortfolio.transactions, transaction]\n          };\n        }\n      });\n      setSuccessMessage(`Successfully bought ${quantity} shares of ${symbol}`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n\n      // Switch to portfolio tab after buying\n      setActiveTab('portfolio');\n    } catch (error) {\n      console.error('Error buying stock:', error);\n      setErrorMessage(`Failed to buy ${symbol}. Please try again.`);\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleSellStock = async (symbol, quantity) => {\n    try {\n      const transaction = await sellStock(symbol, quantity);\n      setPortfolio(prevPortfolio => {\n        if (!prevPortfolio) return null;\n\n        // Find the stock in the portfolio\n        const stockIndex = prevPortfolio.ownedStocks.findIndex(s => s.symbol === symbol);\n        if (stockIndex >= 0) {\n          const stock = prevPortfolio.ownedStocks[stockIndex];\n          const updatedStocks = [...prevPortfolio.ownedStocks];\n          if (stock.quantity <= quantity) {\n            // Remove stock if selling all shares\n            updatedStocks.splice(stockIndex, 1);\n          } else {\n            // Update quantity if selling some shares\n            updatedStocks[stockIndex] = {\n              ...stock,\n              quantity: stock.quantity - quantity,\n              realizedProfit: stock.realizedProfit + (transaction.price - stock.buyPrice) * quantity\n            };\n          }\n          return {\n            ...prevPortfolio,\n            cash: prevPortfolio.cash + transaction.price * quantity,\n            ownedStocks: updatedStocks,\n            portfolioValue: calculatePortfolioValue(updatedStocks),\n            transactions: [...prevPortfolio.transactions, transaction]\n          };\n        }\n        return prevPortfolio;\n      });\n      setSuccessMessage(`Successfully sold ${quantity} shares of ${symbol}`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error selling stock:', error);\n      setErrorMessage(`Failed to sell ${symbol}. Please try again.`);\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleProgressDay = async () => {\n    try {\n      const updatedPortfolio = await progressDay();\n      setPortfolio(updatedPortfolio);\n      setSuccessMessage('Successfully progressed to the next day');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error progressing day:', error);\n      setErrorMessage('Failed to progress to the next day. Please try again.');\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleResetPortfolio = async () => {\n    try {\n      const newPortfolio = await resetPortfolio();\n      setPortfolio(newPortfolio);\n      setSuccessMessage('Portfolio has been reset');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error resetting portfolio:', error);\n      setErrorMessage('Failed to reset portfolio. Please try again.');\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleSavePortfolio = async () => {\n    try {\n      await savePortfolio();\n      setSuccessMessage('Portfolio saved successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error saving portfolio:', error);\n      setErrorMessage('Failed to save portfolio. Please try again.');\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleLoadPortfolio = async () => {\n    try {\n      const loadedPortfolio = await loadPortfolio();\n      setPortfolio(loadedPortfolio);\n      setSuccessMessage('Portfolio loaded successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error loading portfolio:', error);\n      setErrorMessage('Failed to load portfolio. Please try again.');\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const handleCreateStock = async (name, symbol, sector) => {\n    try {\n      const newStock = await createStock(name, symbol, sector);\n      setPortfolio(prevPortfolio => {\n        if (!prevPortfolio) return null;\n        return {\n          ...prevPortfolio,\n          stockPool: [...prevPortfolio.stockPool, newStock]\n        };\n      });\n      setSuccessMessage(`Successfully created new stock: ${symbol}`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (error) {\n      console.error('Error creating stock:', error);\n      setErrorMessage(`Failed to create stock ${symbol}. Please try again.`);\n      setTimeout(() => setErrorMessage(null), 3000);\n    }\n  };\n  const calculatePortfolioValue = stocks => {\n    return stocks.reduce((total, stock) => total + stock.currentPrice * stock.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `site-header ${isScrolled ? 'scrolled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"site-title\",\n          children: \"Trader Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      portfolio: portfolio,\n      onProgressDay: handleProgressDay,\n      onReset: handleResetPortfolio,\n      onSave: handleSavePortfolio,\n      onLoad: handleLoadPortfolio,\n      isScrolled: isScrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container py-4\",\n      children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-success p-3 rounded mb-4 fade-in\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-error p-3 rounded mb-4 fade-in\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab-indicator ${activeTab === 'market' ? 'market' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'portfolio' ? 'active' : ''}`,\n          onClick: () => setActiveTab('portfolio'),\n          children: \"My Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'market' ? 'active' : ''}`,\n          onClick: () => setActiveTab('market'),\n          children: \"Stock Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [portfolio && activeTab === 'portfolio' && /*#__PURE__*/_jsxDEV(Portfolio, {\n          stocks: portfolio.ownedStocks,\n          pnlHistory: portfolio.pnlHistory,\n          onSell: handleSellStock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), portfolio && activeTab === 'market' && /*#__PURE__*/_jsxDEV(StockMarket, {\n          stocks: portfolio.stockPool,\n          onBuy: handleBuyStock,\n          onCreateStock: handleCreateStock,\n          marketState: portfolio.marketState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"b9mHuCTZwkQasDa2kqLIc5pYZVg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","StockMarket","Portfolio","getPortfolio","buyStock","sellStock","progressDay","resetPortfolio","savePortfolio","loadPortfolio","createStock","jsxDEV","_jsxDEV","App","_s","portfolio","setPortfolio","successMessage","setSuccessMessage","errorMessage","setErrorMessage","isScrolled","setIsScrolled","activeTab","setActiveTab","fetchPortfolio","handleScroll","window","scrollY","addEventListener","removeEventListener","data","error","console","handleBuyStock","symbol","quantity","transaction","prevPortfolio","stockIndex","ownedStocks","findIndex","s","updatedStocks","buyPrice","price","cash","portfolioValue","calculatePortfolioValue","transactions","stockPool","stockToBuy","find","newStock","potentialProfit","realizedProfit","setTimeout","handleSellStock","stock","splice","handleProgressDay","updatedPortfolio","handleResetPortfolio","newPortfolio","handleSavePortfolio","handleLoadPortfolio","loadedPortfolio","handleCreateStock","name","sector","stocks","reduce","total","currentPrice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onProgressDay","onReset","onSave","onLoad","onClick","pnlHistory","onSell","onBuy","onCreateStock","marketState","_c","$RefreshReg$"],"sources":["C:/Users/SAiNT/Desktop/2024/Projects/TraderGame - Java/tradergame/web-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StockPortfolio, StockTransaction } from './types';\r\nimport Header from './components/Header';\r\nimport StockMarket from './components/StockMarket';\r\nimport Portfolio from './components/Portfolio';\r\nimport { \r\n  getPortfolio, \r\n  getStocks, \r\n  getStockPool, \r\n  buyStock, \r\n  sellStock, \r\n  progressDay, \r\n  resetPortfolio,\r\n  savePortfolio,\r\n  loadPortfolio,\r\n  createStock\r\n} from './services/api';\r\nimport './styles/index.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [portfolio, setPortfolio] = useState<StockPortfolio | null>(null);\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'portfolio' | 'market'>('portfolio');\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n    \r\n    // Add scroll event listener\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 20) {\r\n        setIsScrolled(true);\r\n      } else {\r\n        setIsScrolled(false);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('scroll', handleScroll);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      const data = await getPortfolio();\r\n      setPortfolio(data);\r\n    } catch (error) {\r\n      console.error('Error fetching portfolio:', error);\r\n      setErrorMessage('Failed to load portfolio data. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleBuyStock = async (symbol: string, quantity: number) => {\r\n    try {\r\n      const transaction = await buyStock(symbol, quantity);\r\n      setPortfolio(prevPortfolio => {\r\n        if (!prevPortfolio) return null;\r\n        \r\n        // Find the stock in the portfolio\r\n        const stockIndex = prevPortfolio.ownedStocks.findIndex(s => s.symbol === symbol);\r\n        \r\n        if (stockIndex >= 0) {\r\n          // Update existing stock\r\n          const updatedStocks = [...prevPortfolio.ownedStocks];\r\n          updatedStocks[stockIndex] = {\r\n            ...updatedStocks[stockIndex],\r\n            quantity: updatedStocks[stockIndex].quantity + quantity,\r\n            buyPrice: transaction.price\r\n          };\r\n          \r\n          return {\r\n            ...prevPortfolio,\r\n            cash: prevPortfolio.cash - (transaction.price * quantity),\r\n            ownedStocks: updatedStocks,\r\n            portfolioValue: calculatePortfolioValue(updatedStocks),\r\n            transactions: [...prevPortfolio.transactions, transaction]\r\n          };\r\n        } else {\r\n          // Add new stock to portfolio\r\n          const stockPool = prevPortfolio.stockPool;\r\n          const stockToBuy = stockPool.find(s => s.symbol === symbol);\r\n          \r\n          if (!stockToBuy) return prevPortfolio;\r\n          \r\n          const newStock = {\r\n            ...stockToBuy,\r\n            quantity,\r\n            buyPrice: transaction.price,\r\n            potentialProfit: 0,\r\n            realizedProfit: 0\r\n          };\r\n          \r\n          return {\r\n            ...prevPortfolio,\r\n            cash: prevPortfolio.cash - (transaction.price * quantity),\r\n            ownedStocks: [...prevPortfolio.ownedStocks, newStock],\r\n            portfolioValue: calculatePortfolioValue([...prevPortfolio.ownedStocks, newStock]),\r\n            transactions: [...prevPortfolio.transactions, transaction]\r\n          };\r\n        }\r\n      });\r\n      \r\n      setSuccessMessage(`Successfully bought ${quantity} shares of ${symbol}`);\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n      \r\n      // Switch to portfolio tab after buying\r\n      setActiveTab('portfolio');\r\n    } catch (error) {\r\n      console.error('Error buying stock:', error);\r\n      setErrorMessage(`Failed to buy ${symbol}. Please try again.`);\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleSellStock = async (symbol: string, quantity: number) => {\r\n    try {\r\n      const transaction = await sellStock(symbol, quantity);\r\n      setPortfolio(prevPortfolio => {\r\n        if (!prevPortfolio) return null;\r\n        \r\n        // Find the stock in the portfolio\r\n        const stockIndex = prevPortfolio.ownedStocks.findIndex(s => s.symbol === symbol);\r\n        \r\n        if (stockIndex >= 0) {\r\n          const stock = prevPortfolio.ownedStocks[stockIndex];\r\n          const updatedStocks = [...prevPortfolio.ownedStocks];\r\n          \r\n          if (stock.quantity <= quantity) {\r\n            // Remove stock if selling all shares\r\n            updatedStocks.splice(stockIndex, 1);\r\n          } else {\r\n            // Update quantity if selling some shares\r\n            updatedStocks[stockIndex] = {\r\n              ...stock,\r\n              quantity: stock.quantity - quantity,\r\n              realizedProfit: stock.realizedProfit + (transaction.price - stock.buyPrice) * quantity\r\n            };\r\n          }\r\n          \r\n          return {\r\n            ...prevPortfolio,\r\n            cash: prevPortfolio.cash + (transaction.price * quantity),\r\n            ownedStocks: updatedStocks,\r\n            portfolioValue: calculatePortfolioValue(updatedStocks),\r\n            transactions: [...prevPortfolio.transactions, transaction]\r\n          };\r\n        }\r\n        \r\n        return prevPortfolio;\r\n      });\r\n      \r\n      setSuccessMessage(`Successfully sold ${quantity} shares of ${symbol}`);\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error selling stock:', error);\r\n      setErrorMessage(`Failed to sell ${symbol}. Please try again.`);\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleProgressDay = async () => {\r\n    try {\r\n      const updatedPortfolio = await progressDay();\r\n      setPortfolio(updatedPortfolio);\r\n      setSuccessMessage('Successfully progressed to the next day');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error progressing day:', error);\r\n      setErrorMessage('Failed to progress to the next day. Please try again.');\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleResetPortfolio = async () => {\r\n    try {\r\n      const newPortfolio = await resetPortfolio();\r\n      setPortfolio(newPortfolio);\r\n      setSuccessMessage('Portfolio has been reset');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error resetting portfolio:', error);\r\n      setErrorMessage('Failed to reset portfolio. Please try again.');\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleSavePortfolio = async () => {\r\n    try {\r\n      await savePortfolio();\r\n      setSuccessMessage('Portfolio saved successfully');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error saving portfolio:', error);\r\n      setErrorMessage('Failed to save portfolio. Please try again.');\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleLoadPortfolio = async () => {\r\n    try {\r\n      const loadedPortfolio = await loadPortfolio();\r\n      setPortfolio(loadedPortfolio);\r\n      setSuccessMessage('Portfolio loaded successfully');\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error loading portfolio:', error);\r\n      setErrorMessage('Failed to load portfolio. Please try again.');\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const handleCreateStock = async (name: string, symbol: string, sector: string) => {\r\n    try {\r\n      const newStock = await createStock(name, symbol, sector);\r\n      setPortfolio(prevPortfolio => {\r\n        if (!prevPortfolio) return null;\r\n        \r\n        return {\r\n          ...prevPortfolio,\r\n          stockPool: [...prevPortfolio.stockPool, newStock]\r\n        };\r\n      });\r\n      \r\n      setSuccessMessage(`Successfully created new stock: ${symbol}`);\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (error) {\r\n      console.error('Error creating stock:', error);\r\n      setErrorMessage(`Failed to create stock ${symbol}. Please try again.`);\r\n      setTimeout(() => setErrorMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  const calculatePortfolioValue = (stocks: any[]) => {\r\n    return stocks.reduce((total, stock) => total + (stock.currentPrice * stock.quantity), 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <div className={`site-header ${isScrolled ? 'scrolled' : ''}`}>\r\n        <div className=\"container\">\r\n          <h1 className=\"site-title\">Trader Game</h1>\r\n        </div>\r\n      </div>\r\n      \r\n      <Header \r\n        portfolio={portfolio}\r\n        onProgressDay={handleProgressDay}\r\n        onReset={handleResetPortfolio}\r\n        onSave={handleSavePortfolio}\r\n        onLoad={handleLoadPortfolio}\r\n        isScrolled={isScrolled}\r\n      />\r\n      \r\n      <main className=\"container py-4\">\r\n        {successMessage && (\r\n          <div className=\"bg-success p-3 rounded mb-4 fade-in\">\r\n            <p>{successMessage}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {errorMessage && (\r\n          <div className=\"bg-error p-3 rounded mb-4 fade-in\">\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Tab Navigation */}\r\n        <div className=\"tab-navigation\">\r\n          <div className={`tab-indicator ${activeTab === 'market' ? 'market' : ''}`}></div>\r\n          <button\r\n            className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('portfolio')}\r\n          >\r\n            My Portfolio\r\n          </button>\r\n          <button\r\n            className={`tab-button ${activeTab === 'market' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('market')}\r\n          >\r\n            Stock Market\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Tab Content */}\r\n        <div className=\"tab-content\">\r\n          {portfolio && activeTab === 'portfolio' && (\r\n            <Portfolio \r\n              stocks={portfolio.ownedStocks}\r\n              pnlHistory={portfolio.pnlHistory}\r\n              onSell={handleSellStock}\r\n            />\r\n          )}\r\n          \r\n          {portfolio && activeTab === 'market' && (\r\n            <StockMarket \r\n              stocks={portfolio.stockPool}\r\n              onBuy={handleBuyStock}\r\n              onCreateStock={handleCreateStock}\r\n              marketState={portfolio.marketState}\r\n            />\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}